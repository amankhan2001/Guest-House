'use strict';
const q = require('q');
const path = require('path');
const fonts = {
    Roboto: {
        normal: path.join(__dirname, '/fonts/Roboto/Roboto-Regular.ttf'),
        bold: path.join(__dirname, './fonts/Roboto/Roboto-Medium.ttf'),
        italics: path.join(__dirname, './fonts/Roboto/Roboto-Italic.ttf'),
        bolditalics: path.join(__dirname, './fonts/Roboto/Roboto-MediumItalic.ttf')
    }
};

function createDocDef(content) {
    let promiseQ = q.defer();
    try {
        // Predefined values for table structure and headers elemeants
        let documentDefination = {
            pageOrientation: 'landscape',
            content: [{
                    text: 'Dependency check between Quality and Production\n\n',
                    style: 'header'
                },

                {
                    columns: [{
                            text: [{
                                    text: 'CR Number / TR Number : ',
                                    fontSize: 15,
                                    bold: false,
                                    color: 'gray'
                                },
                                {
                                    text: content.crTicketNumber + '/' + content.transportRequest + '\n',
                                    fontSize: 15,
                                    bold: true
                                },
                                {
                                    text: 'Description  : ',
                                    fontSize: 15,
                                    bold: false,
                                    color: 'gray'
                                },
                                {
                                    text: content.description + '\n',
                                    fontSize: 15,
                                    bold: true
                                },
                                {
                                    text: 'Generated By :',
                                    fontSize: 15,
                                    bold: false,
                                    color: 'gray'
                                },
                                {
                                    text: content.generatedBy + '\n',
                                    fontSize: 15,
                                    bold: true
                                }


                            ]
                        },
                        {
                            text: [{
                                    text: 'Date : ',
                                    fontSize: 15,
                                    bold: false,
                                    color: 'gray'
                                },
                                {
                                    text: content.executionDate + '\n',
                                    fontSize: 15,
                                    bold: true
                                },
                                {
                                    text: 'Time   : ',
                                    fontSize: 15,
                                    bold: false,
                                    color: 'gray'
                                },
                                {
                                    text: content.time + '\n',
                                    fontSize: 15,
                                    bold: true
                                },


                            ]
                        }
                    ]
                },
                {
                    text: '\nCD check analysis reported below recommendations\n\n',
                    style: 'subheader'
                },

                {
                    style: 'tableExample',
                    table: {
                        body: [
                            ['Type', 'Object', 'Object Name	', 'Locked Requesta', 'Remarks'],
                        ]
                    }
                }
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    alignment: 'center'

                },
                subheader: {
                    fontSize: 16,
                    bold: true,
                    alignment: 'center'

                },
                bigger: {
                    fontSize: 15,
                    italics: true
                },
                tableExample: {
                    margin: [0, 5, 0, 15]
                },
            }
        }

        // Generate table values from given request data
        content.pdfData.forEach(el => {
            documentDefination.content[3].table.body.push([el.TYPE, el.OBJECT, el.OBJ_NAME, el.LOCK_REQ, el.REMARKS])
        })
        promiseQ.resolve(documentDefination);
    } catch (error) {
        console.log(error);
        promiseQ.reject(error);
    }
    return promiseQ.promise;
}

module.exports.createDocDef = createDocDef;